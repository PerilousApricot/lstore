/*
Copyright 2016 Vanderbilt University

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

/** \file
* Autogenerated public API
*/

#ifndef ACCRE_LIO_SEGMENT_H_INCLUDED
#define ACCRE_LIO_SEGMENT_H_INCLUDED

#include <gop/opque.h>
#include <lio/cache.h>
#include <lio/ex3.h>
#include <lio/visibility.h>
#include <lio/rs.h>

#ifdef __cplusplus
extern "C" {
#endif

// Typedefs
// FIXME: leaky
typedef struct seglog_priv_t seglog_priv_t;
typedef struct slog_range_t slog_range_t;
typedef struct seglun_priv_t seglun_priv_t;

// Functions
// FIXME: leaky
LIO_API int lio_cache_stats_get(cache_t *c, lio_cache_stats_get_t *cs);
LIO_API int lio_cache_stats_get_print(lio_cache_stats_get_t *cs, char *buffer, int *used, int nmax);
LIO_API lio_cache_stats_get_t segment_lio_cache_stats_get(segment_t *seg);
LIO_API op_generic_t *lio_segment_linear_make(segment_t *seg, data_attr_t *da, rs_query_t *rsq, int n_rid, ex_off_t block_size, ex_off_t total_size, int timeout);
LIO_API op_generic_t *lio_slog_merge_with_base(segment_t *seg, data_attr_t *da, ex_off_t bufsize, char *buffer, int truncate_old_log, int timeout);  //** Merges the current log with the base

// Preprocessor constants
// FIXME: leaky
#define SEGMENT_TYPE_LINEAR "linear"

#ifdef __cplusplus
}
#endif

#endif /* ^ ACCRE_LIO_SEGMENT_CACHE_H_INCLUDED ^ */ 
