.. DO NOT EDIT Autogenerated by scripts/dump-api.sh

Current LStore API
==================

This document lists the exported LStore API.

.. toctree::

Functions
---------
*  (fn_response)
*  extern gop_op_status_t gop_error_status;
*  extern gop_op_status_t gop_failure_status;
*  extern gop_op_status_t gop_success_status;
*  gop_callback_append
*  gop_cb_set
*  gop_change_all_hportal_conn
*  gop_completed_successfully
*  gop_default_sort_ops
*  gop_dummy
*  gop_exec_time
*  gop_finished_submission
*  gop_free
*  gop_generic_free
*  gop_get_next_failed
*  gop_get_next_finished
*  gop_gop_mq_command_table_set_default
*  gop_hp_context_create
*  gop_hp_context_destroy
*  gop_hp_direct_submit
*  gop_hp_que_op_submit
*  gop_hp_shutdown
*  gop_hp_submit
*  gop_init
*  gop_init_opque_system
*  gop_mq_apply_return_address_msg
*  gop_mq_command_set
*  gop_mq_create_context
*  gop_mq_destroy_context
*  gop_mq_frame_destroy
*  gop_mq_frame_new
*  gop_mq_frame_set
*  gop_mq_frame_strdup
*  gop_mq_get_frame
*  gop_mq_id2str
*  gop_mq_make_exec_core_msg
*  gop_mq_make_response_core_msg
*  gop_mq_make_status_frame
*  gop_mq_msg_append_frame
*  gop_mq_msg_append_mem
*  gop_mq_msg_append_msg
*  gop_mq_msg_current
*  gop_mq_msg_destroy
*  gop_mq_msg_first
*  gop_mq_msg_last
*  gop_mq_msg_new
*  gop_mq_msg_next
*  gop_mq_msg_pluck
*  gop_mq_ongoing_add
*  gop_mq_ongoing_create
*  gop_mq_ongoing_destroy
*  gop_mq_ongoing_get
*  gop_mq_ongoing_host_dec
*  gop_mq_ongoing_host_inc
*  gop_mq_ongoing_release
*  gop_mq_ongoing_remove
*  gop_mq_portal_command_table
*  gop_mq_portal_create
*  gop_mq_portal_destroy
*  gop_mq_portal_install
*  gop_mq_portal_lookup
*  gop_mq_portal_remove
*  gop_mq_read_status_frame
*  gop_mq_remove_header
*  gop_mq_stream_destroy
*  gop_mq_stream_read
*  gop_mq_stream_read_create
*  gop_mq_stream_read_varint
*  gop_mq_stream_write
*  gop_mq_stream_write_create
*  gop_mq_stream_write_varint
*  gop_mq_string_to_address
*  gop_mq_submit
*  gop_mq_task_new
*  gop_mqs_server_more_cb
*  gop_opque_add
*  gop_opque_free
*  gop_opque_new
*  gop_reset
*  gop_set_auto_destroy
*  gop_set_exec_mode
*  gop_shutdown
*  gop_start_execution
*  gop_sync_exec
*  gop_sync_exec_status
*  gop_tasks_failed
*  gop_tasks_finished
*  gop_tasks_left
*  gop_tp_context_create
*  gop_tp_context_destroy
*  gop_tp_op_new
*  gop_waitall
*  gop_waitany
*  gop_waitany_timed
*  IBP_phoebus_copy
*  _IBP_errno
*  ibp_alloc_op
*  ibp_append_op
*  ibp_attributes_t_get
*  ibp_cap_destroy
*  ibp_cap_destroyset
*  ibp_cap_get
*  ibp_cap_getstatus
*  ibp_capset_new
*  ibp_cc_type
*  ibp_chksum_set
*  ibp_config_load
*  ibp_config_load_file
*  ibp_context_create
*  ibp_context_destroy
*  ibp_copy_op
*  ibp_copyappend_op
*  ibp_depot_inq_op
*  ibp_io_mode_set
*  ibp_io_start
*  ibp_io_waitall
*  ibp_max_depot_threads_get
*  ibp_max_depot_threads_set
*  ibp_modify_alloc_op
*  ibp_modify_count_op
*  ibp_op_cc_set
*  ibp_op_init
*  ibp_op_ncs_set
*  ibp_probe_op
*  ibp_proxy_alloc_op
*  ibp_proxy_remove_op
*  ibp_query_resources_op
*  ibp_read_cc_set
*  ibp_read_op
*  ibp_remove_op
*  ibp_rid2str
*  ibp_rid_compare
*  ibp_rid_empty
*  ibp_rid_is_empty
*  ibp_ridlist_destroy
*  ibp_ridlist_element_get
*  ibp_ridlist_size_get
*  ibp_rw_op
*  ibp_set_attributes
*  ibp_set_depot
*  ibp_set_sync_context
*  ibp_set_timer
*  ibp_str2rid
*  ibp_sync_command
*  ibp_tcpsize_get
*  ibp_tcpsize_set
*  ibp_truncate_op
*  ibp_validate_chksum_op
*  ibp_vec_read_op
*  ibp_vec_write_op
*  ibp_version
*  ibp_version_op
*  ibp_write_cc_set
*  ibp_write_op
*  extern FILE _lio_ifd;  //** Default information log device
*  extern int lio_parallel_task_count;
*  extern lio_config_t lio_gc;
*  extern lio_service_manager_t lio_exnode_service_set;
*  extern struct fuse_operations lfs_fops;
*  extern tbx_log_fd_t lio_ifd;
*  get_lio_cache_stats_get
*  lio_cache_pages_drop
*  lio_cache_stats_get
*  lio_cache_stats_get_print
*  lio_close_op
*  lio_cp_lio2local_op
*  lio_cp_local2lio_op
*  lio_create_fsck_iter
*  lio_create_object_iter
*  lio_create_object_iter_alist
*  lio_create_op
*  lio_destroy_fsck_iter
*  lio_destroy_object_iter
*  lio_encode_error_counts
*  lio_exists
*  lio_exists_op
*  lio_exnode_clone
*  lio_exnode_create
*  lio_exnode_default_get
*  lio_exnode_deserialize
*  lio_exnode_destroy
*  lio_exnode_exchange_create
*  lio_exnode_exchange_destroy
*  lio_exnode_exchange_load_file
*  lio_exnode_serialize
*  lio_exnode_service_set_create
*  lio_exnode_service_set_destroy
*  lio_file_copy_op
*  lio_fopen_flags
*  lio_fsck_op
*  lio_fsck_visited_count
*  lio_get_error_counts
*  lio_getattr
*  lio_getattr_op
*  lio_hardlink_op
*  lio_init
*  lio_link_op
*  lio_lio_exnode_exchange_text_parse
*  lio_lookup_service
*  lio_move_op
*  lio_multiple_setattr_op
*  lio_next_attr
*  lio_next_fsck
*  lio_next_object
*  lio_open_op
*  lio_os_glob2regex
*  lio_os_local_filetype
*  lio_os_path_glob2regex
*  lio_os_path_split
*  lio_os_regex2table
*  lio_os_regex_is_fixed
*  lio_os_regex_table_destroy
*  lio_parse_path_options
*  lio_path_copy_op
*  lio_path_local_make_absolute
*  lio_path_release
*  lio_path_resolve
*  lio_path_resolve_base
*  lio_path_wildcard_auto_append
*  lio_print_options
*  lio_print_path_options
*  lio_regex_object_set_multiple_attrs_op
*  lio_remove_op
*  lio_remove_regex_op
*  lio_segment_copy
*  lio_segment_linear_make
*  lio_setattr
*  lio_setattr_op
*  lio_shutdown
*  lio_slog_merge_with_base
*  lio_unified_next_object
*  lio_unified_object_iter_create
*  lio_unified_object_iter_destroy
*  lio_view_insert
*  lioc_exists
*  lioc_getattr
*  lioc_setattr
*  lioc_truncate
*  segment_lio_cache_stats_get
*  
*  
*  extern tbx_sl_compare_t tbx_sl_compare_int;
*  extern tbx_sl_compare_t tbx_sl_compare_strcmp;
*  tbx_a_thread_id_ptr
*  tbx_append_printf
*  tbx_atomic_counter
*  tbx_atomic_global_counter
*  tbx_atomic_shutdown
*  tbx_atomic_startup
*  tbx_chksum_set
*  tbx_chksum_type_name
*  tbx_chksum_type_valid
*  tbx_dnsc_lookup
*  tbx_dnsc_shutdown
*  tbx_dnsc_startup
*  tbx_dnsc_startup_sized
*  tbx_info_create
*  tbx_info_flush
*  tbx_inip_destroy
*  tbx_inip_ele_first
*  tbx_inip_ele_get_key
*  tbx_inip_ele_get_value
*  tbx_inip_ele_next
*  tbx_inip_file_read
*  tbx_inip_find_key
*  tbx_inip_get_double
*  tbx_inip_get_integer
*  tbx_inip_get_string
*  tbx_inip_group_count
*  tbx_inip_group_find
*  tbx_inip_group_first
*  tbx_inip_group_free
*  tbx_inip_group_get
*  tbx_inip_group_next
*  tbx_inip_group_set
*  tbx_inip_string_read
*  tbx_isl_count2
*  tbx_isl_del
*  tbx_isl_insert
*  tbx_isl_iter_search
*  tbx_isl_key_first
*  tbx_isl_key_last
*  tbx_isl_new
*  tbx_isl_new_full
*  tbx_isl_next
*  tbx_isl_remove
*  tbx_log_flush
*  tbx_log_open
*  tbx_mlog_load
*  tbx_network_counter
*  tbx_ns_chksum_is_valid
*  tbx_ns_chksum_read_clear
*  tbx_ns_chksum_read_disable
*  tbx_ns_chksum_read_enable
*  tbx_ns_chksum_read_flush
*  tbx_ns_chksum_read_set
*  tbx_ns_chksum_reset
*  tbx_ns_chksum_set
*  tbx_ns_chksum_write_clear
*  tbx_ns_chksum_write_disable
*  tbx_ns_chksum_write_enable
*  tbx_ns_chksum_write_flush
*  tbx_ns_chksum_write_set
*  tbx_ns_close
*  tbx_ns_config_1_ssl
*  tbx_ns_config_2_ssl
*  tbx_ns_connect
*  tbx_ns_destroy
*  tbx_ns_generate_id
*  tbx_ns_getid
*  tbx_ns_new
*  tbx_ns_read
*  tbx_ns_readline_raw
*  tbx_ns_setid
*  tbx_ns_sock_config
*  tbx_ns_timeout_set
*  tbx_ns_write
*  tbx_pack_consumed
*  tbx_pack_create
*  tbx_pack_destroy
*  tbx_pack_read
*  tbx_pack_read_new_data
*  tbx_pack_used
*  tbx_pack_write
*  tbx_pack_write_flush
*  tbx_pack_write_resized
*  tbx_pc_destroy
*  tbx_pc_new
*  tbx_pch_data
*  tbx_pch_release
*  tbx_pch_reserve
*  tbx_random_get_bytes
*  tbx_random_get_int64
*  tbx_random_shutdown
*  tbx_random_startup
*  tbx_sl_create_full
*  tbx_sl_dup_string
*  tbx_sl_empty
*  tbx_sl_first_key
*  tbx_sl_free_no_data
*  tbx_sl_free_no_key
*  tbx_sl_free_simple
*  tbx_sl_insert
*  tbx_sl_iter_search_compare
*  tbx_sl_key_count
*  tbx_sl_key_last
*  tbx_sl_next
*  tbx_sl_remove
*  tbx_sl_search_compare
*  tbx_sl_set_strncmp
*  tbx_stack_count
*  tbx_stack_delete_current
*  tbx_stack_dup
*  tbx_stack_ele_get_data
*  tbx_stack_ele_get_down
*  tbx_stack_empty
*  tbx_stack_free
*  tbx_stack_get_current_data
*  tbx_stack_get_current_ptr
*  tbx_stack_get_info_level
*  tbx_stack_get_top
*  tbx_stack_insert_above
*  tbx_stack_insert_below
*  tbx_stack_link_insert_above
*  tbx_stack_link_push
*  tbx_stack_move_down
*  tbx_stack_move_to_bottom
*  tbx_stack_move_to_ptr
*  tbx_stack_move_to_top
*  tbx_stack_move_up
*  tbx_stack_pop
*  tbx_stack_push
*  tbx_stack_unlink_current
*  tbx_stk_argv2format
*  tbx_stk_escape_strchr
*  tbx_stk_escape_string_token
*  tbx_stk_escape_text
*  tbx_stk_pretty_print_double_with_scale
*  tbx_stk_pretty_print_int_with_scale
*  tbx_stk_string_get_double
*  tbx_stk_string_get_integer
*  tbx_stk_string_token
*  tbx_stk_string_trim
*  tbx_stk_unescape_text
*  tbx_tbuf_copy
*  tbx_tbuf_fn
*  tbx_tbuf_memset
*  tbx_tbuf_next
*  tbx_tbuf_next_block
*  tbx_tbuf_single
*  tbx_tbuf_size
*  tbx_tbuf_test
*  tbx_tbuf_var_buffer_get
*  tbx_tbuf_var_n_iov_get
*  tbx_tbuf_var_nbytes_set
*  tbx_tbuf_var_size
*  tbx_tbuf_vec
*  tbx_varint_test
*  tbx_zigzag_decode
*  tbx_zigzag_encode

Opaque Structs
--------------

* typedef struct tbx_chksum_t tbx_chksum_t;
* typedef struct tbx_inip_element_t tbx_inip_element_t;
* typedef struct tbx_inip_file_t tbx_inip_file_t;
* typedef struct tbx_inip_group_t tbx_inip_group_t;
* typedef struct tbx_isl_data_t tbx_isl_data_t;
* typedef struct tbx_isl_iter_t tbx_isl_iter_t;
* typedef struct tbx_isl_node_t tbx_isl_node_t;
* typedef struct tbx_isl_t tbx_isl_t;
* typedef struct tbx_log_fd_t tbx_log_fd_t;
* typedef struct tbx_net_sock_t tbx_net_sock_t;  //** Contains the private raw socket network fields
* typedef struct tbx_network_t tbx_network_t;
* typedef struct tbx_ns_chksum_t tbx_ns_chksum_t;
* typedef struct tbx_ns_monitor_t tbx_ns_monitor_t;
* typedef struct tbx_ns_t tbx_ns_t;
* typedef struct tbx_pack_raw_t tbx_pack_raw_t;
* typedef struct tbx_pack_t tbx_pack_t;
* typedef struct tbx_pack_zlib_t tbx_pack_zlib_t;
* typedef struct tbx_pc_iter_t tbx_pc_iter_t;
* typedef struct tbx_pc_t tbx_pc_t;
* typedef struct tbx_pch_t tbx_pch_t;
* typedef struct tbx_ph_iter_t tbx_ph_iter_t;
* typedef struct tbx_ph_t tbx_ph_t;
* typedef struct tbx_ref_t tbx_ref_t;
* typedef struct tbx_sl_compare_t tbx_sl_compare_t;
* typedef struct tbx_sl_ele_t tbx_sl_ele_t;
* typedef struct tbx_sl_iter_t tbx_sl_iter_t;
* typedef struct tbx_sl_node_t tbx_sl_node_t;
* typedef struct tbx_stack_ele_t tbx_stack_ele_t;
* typedef struct TYPENAME TYPENAME; \
* typedef struct iovec tbx_iovec_t;
* typedef struct tbx_tbuf_info_t tbx_tbuf_info_t;
* typedef struct tbx_tbuf_state_t tbx_tbuf_state_t;
* typedef struct tbx_tbuf_t tbx_tbuf_t;
* typedef struct tbx_tbuf_var_t tbx_tbuf_var_t;
* typedef struct gop_callback_t gop_callback_t;
* typedef struct gop_host_connection_t gop_host_connection_t;
* typedef struct gop_host_portal_t gop_host_portal_t;
* typedef struct gop_mq_command_stats_t gop_mq_command_stats_t;
* typedef struct gop_mq_command_t gop_mq_command_t;
* typedef struct gop_gop_mq_command_table_t gop_gop_mq_command_table_t;
* typedef struct gop_mq_conn_t gop_mq_conn_t;
* typedef struct gop_mq_context_t gop_mq_context_t;
* typedef struct gop_mq_frame_t gop_mq_frame_t;
* typedef struct gop_mq_heartbeat_entry_t gop_mq_heartbeat_entry_t;
* typedef struct gop_mq_msg_hash_t gop_mq_msg_hash_t;
* typedef struct gop_mq_portal_t gop_mq_portal_t;
* typedef struct gop_mq_socket_context_t gop_mq_socket_context_t;
* typedef struct gop_mq_socket_t gop_mq_socket_t;
* typedef struct gop_mq_task_monitor_t gop_mq_task_monitor_t;
* typedef struct gop_mq_task_t gop_mq_task_t;
* typedef struct gop_mq_ongoing_host_t gop_mq_ongoing_host_t;
* typedef struct gop_mq_ongoing_object_t gop_mq_ongoing_object_t;
* typedef struct gop_mq_ongoing_t gop_mq_ongoing_t;
* typedef struct gop_ongoing_hb_t gop_ongoing_hb_t;
* typedef struct gop_ongoing_table_t gop_ongoing_table_t;
* typedef struct gop_mq_stream_t gop_mq_stream_t;
* typedef struct gop_thread_pool_context_t gop_thread_pool_context_t;
* typedef struct gop_thread_pool_op_t gop_thread_pool_op_t;
* typedef struct gop_command_op_t gop_command_op_t;
* typedef struct gop_control_t gop_control_t;
* typedef struct gop_op_common_t gop_op_common_t;
* typedef struct gop_op_data_t gop_op_data_t;
* typedef struct gop_op_generic_t gop_op_generic_t;
* typedef struct gop_op_status_t gop_op_status_t;
* typedef struct gop_opque_t gop_opque_t;
* typedef struct gop_portal_context_t gop_portal_context_t;
* typedef struct gop_portal_fn_t gop_portal_fn_t;
* typedef struct gop_que_data_t gop_que_data_t;
* typedef struct ibp_context_t ibp_context_t;
* typedef struct ibp_op_alloc_t ibp_op_alloc_t;
* typedef struct ibp_op_copy_t ibp_op_copy_t;
* typedef struct ibp_op_depot_inq_t ibp_op_depot_inq_t;
* typedef struct ibp_op_depot_modify_t ibp_op_depot_modify_t;
* typedef struct ibp_op_get_chksum_t ibp_op_get_chksum_t;
* typedef struct ibp_op_merge_alloc_t ibp_op_merge_alloc_t;
* typedef struct ibp_op_modify_alloc_t ibp_op_modify_alloc_t;
* typedef struct ibp_op_probe_t ibp_op_probe_t;
* typedef struct ibp_op_rid_inq_t ibp_op_rid_inq_t;
* typedef struct ibp_op_rw_t ibp_op_rw_t;
* typedef struct ibp_op_t ibp_op_t;
* typedef struct ibp_op_validate_chksum_t ibp_op_validate_chksum_t;
* typedef struct ibp_op_version_t ibp_op_version_t;
* typedef struct ibp_rw_buf_t ibp_rw_buf_t;
* typedef struct ibp_capset_t ibp_capset_t;
* typedef struct ibp_attributes_t ibp_attributes_t;
* typedef struct ibp_proxy_capstatus_t ibp_proxy_capstatus_t;
* typedef struct ibp_capstatus_t ibp_capstatus_t;
* typedef struct ibp_connect_context_t ibp_connect_context_t;
* typedef struct ibp_depot_t ibp_depot_t;
* typedef struct ibp_depotinfo_t ibp_depotinfo_t;
* typedef struct ibp_ridlist_t ibp_ridlist_t;
* typedef struct ibp_tbx_iovec_t ibp_tbx_iovec_t;
* typedef struct ibp_timer_t ibp_timer_t;
* typedef struct ibp_rid_t ibp_rid_t;
* typedef struct lio_authn_t lio_authn_t;
* typedef struct lio_creds_t lio_creds_t;
* typedef struct lio_authn_fake_priv_t lio_authn_fake_priv_t;
* typedef struct lio_blacklist_ibp_rid_t lio_blacklist_ibp_rid_t;
* typedef struct lio_blacklist_t lio_blacklist_t;
* typedef struct lio_cache_cond_t lio_cache_cond_t;
* typedef struct lio_cache_counters_t lio_cache_counters_t;
* typedef struct lio_cache_fn_t lio_cache_fn_t;
* typedef struct lio_cache_page_t lio_cache_page_t;
* typedef struct lio_cache_partial_page_t lio_cache_partial_page_t;
* typedef struct lio_cache_range_t lio_cache_range_t;
* typedef struct lio_cache_lio_segment_t lio_cache_lio_segment_t;
* typedef struct lio_cache_t lio_cache_t;
* typedef struct lio_data_page_t lio_data_page_t;
* typedef struct lio_cache_stats_get_t lio_cache_stats_get_t;
* typedef struct lio_page_handle_t lio_page_handle_t;
* typedef struct lio_page_table_t lio_page_table_t;
* typedef struct lio_amp_page_stream_t lio_amp_page_stream_t;
* typedef struct lio_amp_page_wait_t lio_amp_page_wait_t;
* typedef struct lio_amp_stream_table_t lio_amp_stream_table_t;
* typedef struct lio_cache_amp_t lio_cache_amp_t;
* typedef struct lio_page_amp_t lio_page_amp_t;
* typedef struct lio_data_block_attr_t lio_data_block_attr_t;
* typedef struct lio_data_block_t lio_data_block_t;
* typedef struct lio_data_block_warm_t lio_data_block_warm_t;
* typedef struct lio_data_service_fn_t lio_data_service_fn_t;
* typedef struct lio_ds_ibp_attr_t lio_ds_ibp_attr_t;
* typedef struct lio_ds_ibp_alloc_op_t lio_ds_ibp_alloc_op_t;
* typedef struct lio_ds_ibp_op_t lio_ds_ibp_op_t;
* typedef struct lio_ds_ibp_priv_t lio_ds_ibp_priv_t;
* typedef struct lio_ds_ibp_truncate_op_t lio_ds_ibp_truncate_op_t;
* typedef struct lio_erasure_plan_t lio_erasure_plan_t;
* typedef struct lio_exnode_t lio_exnode_t;
* typedef struct lio_inspect_args_t lio_inspect_args_t;
* typedef struct lio_rid_inspect_tweak_t lio_rid_inspect_tweak_t;
* typedef struct lio_segment_errors_t lio_segment_errors_t;
* typedef struct lio_segment_fn_t lio_segment_fn_t;
* typedef struct lio_segment_rw_hints_t lio_segment_rw_hints_t;
* typedef struct lio_segment_t lio_segment_t;
* typedef struct lio_ex_header_t lio_ex_header_t;
* typedef struct lio_exnode_exchange_t lio_exnode_exchange_t;
* typedef struct lio_lio_exnode_text_t lio_lio_exnode_text_t;
* typedef struct lio_config_t lio_config_t;
* typedef struct lio_cp_file_t lio_cp_file_t;
* typedef struct lio_cp_path_t lio_cp_path_t;
* typedef struct lio_fd_t lio_fd_t;
* typedef struct lio_file_handle_t lio_file_handle_t;
* typedef struct lio_fn_t lio_fn_t;
* typedef struct lio_fsck_iter_t lio_fsck_iter_t;
* typedef struct lio_path_tuple_t lio_path_tuple_t;
* typedef struct lio_unified_object_iter_t lio_unified_object_iter_t;
* typedef struct lio_fuse_file_handle_s lio_fuse_file_handle_t;
* typedef struct lio_fuse_init_args_t lio_fuse_init_args_t;
* typedef struct lio_fuse_t lio_fuse_t;
* typedef struct lio_object_service_fn_t lio_object_service_fn_t;
* typedef struct lio_os_attr_list_t lio_os_attr_list_t;
* typedef struct lio_os_authz_t lio_os_authz_t;
* typedef struct lio_os_regex_entry_t lio_os_regex_entry_t;
* typedef struct lio_os_regex_table_t lio_os_regex_table_t;
* typedef struct lio_os_virtual_attr_t lio_os_virtual_attr_t;
* typedef struct lio_osfile_priv_t lio_osfile_priv_t;
* typedef struct local_object_iter_t local_object_iter_t;
* typedef struct lio_osrc_priv_t lio_osrc_priv_t;
* typedef struct lio_osrs_priv_t lio_osrs_priv_t;
* typedef struct lio_resource_service_fn_t lio_resource_service_fn_t;
* typedef struct lio_rid_change_entry_t lio_rid_change_entry_t;
* typedef struct lio_rs_hints_t lio_rs_hints_t;
* typedef struct lio_rs_mapping_notify_t lio_rs_mapping_notify_t;
* typedef struct lio_rs_request_t lio_rs_request_t;
* typedef struct lio_rs_space_t lio_rs_space_t;
* typedef struct lio_rsq_base_ele_t lio_rsq_base_ele_t;
* typedef struct lio_rsq_base_t lio_rsq_base_t;
* typedef struct lio_rs_remote_client_priv_t lio_rs_remote_client_priv_t;
* typedef struct lio_rs_remote_server_priv_t lio_rs_remote_server_priv_t;
* typedef struct lio_rs_simple_priv_t lio_rs_simple_priv_t;
* typedef struct lio_rss_check_entry_t lio_rss_check_entry_t;
* typedef struct lio_rss_rid_entry_t lio_rss_rid_entry_t;
* typedef struct lio_seglog_priv_t lio_seglog_priv_t;
* typedef struct lio_slog_range_t lio_slog_range_t;
* typedef struct lio_seglun_priv_t lio_seglun_priv_t;
* typedef struct lio_service_manager_t lio_service_manager_t;
* typedef struct lio_trace_file_t lio_trace_file_t;
* typedef struct lio_trace_op_t lio_trace_op_t;
* typedef struct lio_trace_stats_t lio_trace_stats_t;
* typedef struct lio_trace_t lio_trace_t;


Non-Opaque Structs
------------------
Do *NOT* allocate these on the stack. They will be hidden at some point soon.

* tbx_isl_iter_t
* tbx_isl_t
* tbx_ns_chksum_t
* tbx_pch_t
* tbx_ref_t
* tbx_sl_t
* tbx_sl_iter_t
* tbx_sl_compare_t
* tbx_stack_ele_t
* tbx_stack_t
* tbx_tbuf_info_t
* tbx_tbuf_state_t
* tbx_tbuf_var_t
* tbx_tbuf_t
* gop_callback_t
* gop_op_status_t
* gop_op_common_t
* gop_op_generic_t
* gop_command_op_t
* gop_op_data_t
* gop_mq_task_t
* gop_mq_ongoing_object_t
* gop_que_data_t
* gop_opque_t
* gop_portal_fn_t
* gop_portal_context_t
* gop_thread_pool_context_t
* gop_thread_pool_op_t
* ibp_op_validate_chksum_t
* ibp_op_get_chksum_t
* ibp_rw_buf_t
* ibp_op_rw_t
* ibp_op_merge_alloc_t
* ibp_op_alloc_t
* ibp_op_probe_t
* ibp_op_modify_alloc_t
* ibp_op_copy_t
* ibp_op_depot_modify_t
* ibp_op_depot_inq_t
* ibp_op_version_t
* ibp_op_rid_inq_t
* ibp_op_t
* ibp_depotinfo_t
* ibp_attributes_t
* ibp_rid_t
* ibp_depot_t
* ibp_capset_t
* ibp_capstatus_t
* ibp_timer_t
* ibp_connect_context_t
* ibp_tbx_iovec_t
* lio_data_service_fn_t
* lio_ds_ibp_attr_t
* lio_ds_ibp_priv_t
* lio_ex_header_t
* lio_rid_inspect_tweak_t
* lio_inspect_args_t
* lio_lio_exnode_text_t
* lio_exnode_exchange_t
* lio_config_t
* lio_path_tuple_t
* lio_cp_file_t
* lio_cp_path_t
* lio_fuse_init_args_t
* lio_object_service_fn_t
* lio_os_regex_entry_t
* lio_os_regex_table_t
* lio_rs_mapping_notify_t
* lio_resource_service_fn_t
* lio_rid_change_entry_t
* lio_segment_fn_t
* lio_segment_t
* lio_segment_errors_t


Enumerations
------------

* typedef enum tbx_chksum_type_t tbx_chksum_type_t;
* typedef enum tbx_chksum_digest_output_t tbx_chksum_digest_output_t;
* typedef enum tbx_dns_ip_t tbx_dns_ip_t;
* typedef enum tbx_net_type_t tbx_net_type_t;
* typedef enum tbx_tbuf_ret_t tbx_tbuf_ret_t;
* typedef enum gop_op_state_t gop_op_state_t;
* typedef enum gop_op_type_t gop_op_type_t;
* typedef enum gop_op_free_mode_t gop_op_free_mode_t;
* typedef enum gop_fm_t gop_fm_t;
* typedef enum gop_op_exec_mode_t gop_op_exec_mode_t;
* typedef enum gop_mqf_msg_t gop_mqf_msg_t;
* typedef enum gop_mq_cmode_t gop_mq_cmode_t;
* typedef enum lio_ex3_format_t lio_ex3_format_t;
* typedef enum lio_ex3_clone_t lio_ex3_clone_t;
* typedef enum lio_ex3_inspect_command_t lio_ex3_inspect_command_t;
* typedef enum lio_fsck_repair_t lio_fsck_repair_t;
* typedef enum lio_fsck_error_flags_t lio_fsck_error_flags_t;
* typedef enum lio_copy_hint_t lio_copy_hint_t;
* typedef enum lio_object_type_t lio_object_type_t;
* typedef enum lio_object_type_flag_t lio_object_type_flag_t;


Function Pointer Types
----------------------
Since so many functions accept function pointers, we typedef'd them all to
clean up the argument lists.

* typedef int (*tbx_chksum_reset_fn_t)(void *state);
* typedef int (*tbx_chksum_size_fn_t)(void *state, tbx_chksum_digest_output_t type);
* typedef int (*tbx_chksum_get_fn_t)(void *state, tbx_chksum_digest_output_t type, char *value);
* typedef int (*tbx_chksum_add_fn_t)(void *state, int size, tbx_tbuf_t *data, int doff);
* typedef tbx_sl_key_t *(*tbx_isl_dup_fn_t)(tbx_sl_key_t *a);
* typedef void (*tbx_isl_key_free_fn_t)(tbx_sl_key_t *a);
* typedef void (*tbx_isl_data_free_fn_t)(tbx_sl_data_t *a);
* typedef void *(*tbx_pc_new_fn_t)(void *arg, int size);
* typedef void (*tbx_pc_free_fn_t)(void *arg, int size, void *dshelf);
* typedef void (*tbx_ref_release_fn_t)(tbx_ref_t *ref);
* typedef tbx_sl_key_t *(*tbx_sl_dup_fn_t)(tbx_sl_key_t *a);
* typedef void (*tbx_sl_key_free_fn_t)(tbx_sl_key_t *a);
* typedef void (*tbx_sl_data_free_fn_t)(tbx_sl_data_t *a);
* typedef void (*gop_callback_fn_t)(void *priv, int value);
* typedef void (*gop_op_free_fn_t)(gop_op_generic_t *d, int mode);
* typedef gop_op_status_t (*gop_op_send_command_fn_t)(gop_op_generic_t *gop, tbx_ns_t *ns);
* typedef gop_op_status_t (*gop_op_send_phase_fn_t)(gop_op_generic_t *gop, tbx_ns_t *ns);
* typedef gop_op_status_t (*gop_op_recv_phase_fn_t)(gop_op_generic_t *gop, tbx_ns_t *ns);
* typedef int (*gop_op_on_submit_fn_t)(tbx_stack_t *stack, tbx_stack_ele_t *gop_ele);
* typedef int (*gop_op_before_exec_fn_t)(gop_op_generic_t *gop);
* typedef int (*gop_op_destroy_command_fn_t)(gop_op_generic_t *gop);
* typedef void (*gop_mq_exec_fn_t)(void *arg, gop_mq_task_t *task);
* typedef void (*gop_mq_task_arg_free_fn_t)(void *arg);  //** Function for cleaning up the GOP arg. (GOP)
* typedef gop_op_generic_t *(*gop_mq_ongoing_fail_fn_t)(void *arg, void *handle);
* typedef void *(*gop_portal_dup_fn_t)(void *connect_context);  //** Duplicates a ccon
* typedef void (*gop_portal_destroy_fn_t)(void *connect_context);
* typedef int (*gop_portal_connect_fn_t)(tbx_ns_t *ns, void *connect_context, char *host, int port, tbx_ns_timeout_t timeout);
* typedef void (*gop_portal_close_fn_t)(tbx_ns_t *ns);
* typedef void (*gop_portal_sort_fn_t)(void *arg, gop_opque_t *q);        //** optional
* typedef void (*gop_portal_submit_fn_t)(void *arg, gop_op_generic_t *op);
* typedef void (*gop_portal_exec_fn_t)(void *arg, gop_op_generic_t *op);   //** optional
* typedef void (*gop_tp_free_fn_t)(void *arg);
* typedef gop_op_status_t (*gop_tp_cmd_fn_t)(void *arg, int id);
* typedef void (*lio_ds_destroy_service_fn_t)(lio_data_service_fn_t *);
* typedef void (*lio_ds_translate_cap_set_fn_t)(lio_data_service_fn_t *ds, char *rid_key, char *ds_key, data_cap_set_t *cs);
* typedef data_cap_set_t *(*lio_ds_new_cap_set_fn_t)(lio_data_service_fn_t *);
* typedef void *(*lio_ds_cap_auto_warm_fn_t)(lio_data_service_fn_t *, data_cap_set_t *dcs);
* typedef void (*lio_ds_cap_stop_warm_fn_t)(lio_data_service_fn_t *, void *warm);
* typedef data_cap_t *(*lio_ds_get_cap_fn_t)(lio_data_service_fn_t *, data_cap_set_t *cs, int key);
* typedef int (*lio_ds_set_cap_fn_t)(lio_data_service_fn_t *, data_cap_set_t *cs, int key, data_cap_t *cap);
* typedef void (*lio_ds_destroy_cap_set_fn_t)(lio_data_service_fn_t *, data_cap_set_t *caps, int free_cap);
* typedef data_attr_t *(*lio_ds_new_attr_fn_t)(lio_data_service_fn_t *);
* typedef int (*lio_ds_get_attr_fn_t)(lio_data_service_fn_t *, data_attr_t *attr, int key, void *val, int size);
* typedef int (*lio_ds_set_attr_fn_t)(lio_data_service_fn_t *, data_attr_t *attr, int key, void *val);
* typedef void (*lio_ds_destroy_attr_fn_t)(lio_data_service_fn_t *, data_attr_t *attr);
* typedef int (*lio_ds_get_default_attr_fn_t)(lio_data_service_fn_t *, data_attr_t *attr);
* typedef int (*lio_ds_set_default_attr_fn_t)(lio_data_service_fn_t *, data_attr_t *attr);
* typedef data_probe_t *(*lio_ds_new_probe_fn_t)(lio_data_service_fn_t *);
* typedef int (*lio_ds_get_probe_fn_t)(lio_data_service_fn_t *, data_probe_t *probe, int key, void *val, int size);
* typedef void (*lio_ds_destroy_probe_fn_t)(lio_data_service_fn_t *, data_probe_t *probe);
* typedef char *(*lio_ds_res2rid_fn_t)(lio_data_service_fn_t *ds, char *ds_key);
* typedef data_inquire_t *(*lio_ds_new_inquire_fn_t)(lio_data_service_fn_t *ds);
* typedef void (*lio_ds_destroy_inquire_fn_t)(lio_data_service_fn_t *ds, data_inquire_t *space);
* typedef ds_int_t (*lio_ds_res_inquire_get_fn_t)(lio_data_service_fn_t *ds, int type, data_inquire_t *space);
* typedef gop_op_generic_t *(*lio_ds_res_inquire_fn_t)(lio_data_service_fn_t *, char *res, data_attr_t *attr, data_inquire_t *space, int timeout);
* typedef gop_op_generic_t *(*lio_ds_allocate_fn_t)(lio_data_service_fn_t *, char *res, data_attr_t *attr, ds_int_t size, data_cap_set_t *caps, int timeout);
* typedef gop_op_generic_t *(*lio_ds_remove_fn_t)(lio_data_service_fn_t *, data_attr_t *dattr, data_cap_t *mcap, int timeout);
* typedef gop_op_generic_t *(*lio_ds_truncate_fn_t)(lio_data_service_fn_t *, data_attr_t *dattr, data_cap_t *mcap, ex_off_t new_size, int timeout);
* typedef gop_op_generic_t *(*lio_ds_probe_fn_t)(lio_data_service_fn_t *, data_attr_t *dattr, data_cap_t *mcap, data_probe_t *probe, int timeout);
* typedef gop_op_generic_t *(*lio_ds_modify_count_fn_t)(lio_data_service_fn_t *, data_attr_t *dattr, data_cap_t *mcap, int mode, int captype, int timeout);
* typedef gop_op_generic_t *(*lio_ds_read_fn_t)(lio_data_service_fn_t *, data_attr_t *attr, data_cap_t *rcap, ds_int_t off, tbx_tbuf_t *read, ex_off_t boff, ex_off_t len, int timeout);
* typedef gop_op_generic_t *(*lio_ds_write_fn_t)(lio_data_service_fn_t *, data_attr_t *attr, data_cap_t *wcap, ds_int_t off, tbx_tbuf_t *write, ex_off_t boff, ex_off_t len, int timeout);
* typedef gop_op_generic_t *(*lio_ds_readv_fn_t)(lio_data_service_fn_t *, data_attr_t *attr, data_cap_t *rcap, int n_iov, ex_tbx_iovec_t *iov, tbx_tbuf_t *read, ex_off_t boff, ex_off_t len, int timeout);
* typedef gop_op_generic_t *(*lio_ds_writev_fn_t)(lio_data_service_fn_t *, data_attr_t *attr, data_cap_t *wcap, int n_iov, ex_tbx_iovec_t *iov, tbx_tbuf_t *write, ex_off_t boff, ex_off_t len, int timeout);
* typedef gop_op_generic_t *(*lio_ds_append_fn_t)(lio_data_service_fn_t *, data_attr_t *attr, data_cap_t *wcap, tbx_tbuf_t *write, ex_off_t boff, ex_off_t len, int timeout);
* typedef gop_op_generic_t *(*lio_ds_copy_fn_t)(lio_data_service_fn_t *, data_attr_t *attr, int mode, int ns_type, char *ppath, data_cap_t *src_cap, ds_int_t src_off, data_cap_t *dest_cap, ds_int_t dest_off, ds_int_t len, int timeout);
* typedef lio_segment_t *(*lio_segment_create_fn_t)(void *arg);
* typedef void (*lio_os_destroy_service_fn_t)(lio_object_service_fn_t *os);
* typedef os_fsck_iter_t *(*lio_os_create_fsck_iter_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, char *path, int mode);
* typedef void (*lio_os_destroy_fsck_iter_fn_t)(lio_object_service_fn_t *os, os_fsck_iter_t *it);
* typedef int (*lio_os_next_fsck_fn_t)(lio_object_service_fn_t *os, os_fsck_iter_t *it, char **fname, int *ftype);
* typedef gop_op_generic_t *(*lio_os_fsck_object_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, char *fname, int ftype, int resolution);
* typedef lio_creds_t *(*lio_os_cred_init_fn_t)(lio_object_service_fn_t *os, int type, void **arg);
* typedef void (*lio_os_cred_destroy_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds);
* typedef gop_op_generic_t *(*lio_os_exists_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, char *path);
* typedef gop_op_generic_t *(*lio_os_create_object_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, char *path, int type, char *id);
* typedef gop_op_generic_t *(*lio_os_remove_object_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, char *path);
* typedef gop_op_generic_t *(*lio_os_remove_regex_object_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, lio_os_regex_table_t *path, lio_os_regex_table_t *object_regex, int obj_types, int recurse_depth);
* typedef gop_op_generic_t *(*lio_os_abort_remove_regex_object_fn_t)(lio_object_service_fn_t *os, gop_op_generic_t *gop);
* typedef gop_op_generic_t *(*lio_os_regex_object_set_multiple_attrs_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, char *id, lio_os_regex_table_t *path, lio_os_regex_table_t *object_regex, int object_types, int recurse_depth, char **key, void **val, int *v_size, int n);
* typedef gop_op_generic_t *(*lio_os_abort_regex_object_set_multiple_attrs_fn_t)(lio_object_service_fn_t *os, gop_op_generic_t *gop);
* typedef gop_op_generic_t *(*lio_os_move_object_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, char *src_path, char *dest_path);
* typedef gop_op_generic_t *(*lio_os_symlink_object_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, char *src_path, char *dest_path, char *id);
* typedef gop_op_generic_t *(*lio_os_hardlink_object_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, char *src_path, char *dest_path, char *id);
* typedef os_object_iter_t *(*lio_os_create_object_iter_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, lio_os_regex_table_t *path, lio_os_regex_table_t *obj_regex, int object_types, lio_os_regex_table_t *attr, int recurse_dpeth, os_attr_iter_t **it, int v_max);
* typedef os_object_iter_t *(*lio_os_create_object_iter_alist_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, lio_os_regex_table_t *path, lio_os_regex_table_t *obj_regex, int object_types, int recurse_depth, char **key, void **val, int *v_size, int n_keys);
* typedef int (*lio_os_next_object_fn_t)(os_object_iter_t *it, char **fname, int *prefix_len);
* typedef void (*lio_os_destroy_object_iter_fn_t)(os_object_iter_t *it);
* typedef gop_op_generic_t *(*lio_os_open_object_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, char *path, int mode, char *id, os_fd_t **fd, int max_wait);
* typedef gop_op_generic_t *(*lio_os_close_object_fn_t)(lio_object_service_fn_t *os, os_fd_t *fd);
* typedef gop_op_generic_t *(*lio_os_abort_open_object_fn_t)(lio_object_service_fn_t *os, gop_op_generic_t *gop);
* typedef gop_op_generic_t *(*lio_os_symlink_attr_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, char *src_path, char *key_src, os_fd_t *fd_dest, char *key_dest);
* typedef gop_op_generic_t *(*lio_os_symlink_multiple_attrs_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, char **src_path, char **key_src, os_fd_t *fd_dest, char **key_dest, int n);
* typedef gop_op_generic_t *(*lio_os_get_attr_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, os_fd_t *fd, char *key, void **val, int *v_size);
* typedef gop_op_generic_t *(*lio_os_set_attr_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, os_fd_t *fd, char *key, void *val, int v_size);
* typedef gop_op_generic_t *(*lio_os_move_attr_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, os_fd_t *fd, char *key_old, char *key_new);
* typedef gop_op_generic_t *(*lio_os_copy_attr_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, os_fd_t *fd_src, char *key_src, os_fd_t *fd_dest, char *key_dest);
* typedef gop_op_generic_t *(*lio_os_get_multiple_attrs_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, os_fd_t *fd, char **key, void **val, int *v_size, int n);
* typedef gop_op_generic_t *(*lio_os_set_multiple_attrs_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, os_fd_t *fd, char **key, void **val, int *v_size, int n);
* typedef gop_op_generic_t *(*lio_os_move_multiple_attrs_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, os_fd_t *fd, char **key_old, char **key_new, int n);
* typedef gop_op_generic_t *(*lio_os_copy_multiple_attrs_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, os_fd_t *fd_src, char **key_src, os_fd_t *fd_dest, char **key_dest, int n);
* typedef os_attr_iter_t *(*lio_os_create_attr_iter_fn_t)(lio_object_service_fn_t *os, lio_creds_t *creds, os_fd_t *fd, lio_os_regex_table_t *attr, int v_max);
* typedef int (*lio_os_next_attr_fn_t)(os_attr_iter_t *it, char **key, void **val, int *v_size);
* typedef int (*lio_os_add_virtual_attr_fn_t)(lio_os_virtual_attr_t *va, char *key, int type);
* typedef void (*lio_os_destroy_attr_iter_fn_t)(os_attr_iter_t *it);
* typedef char *(*lio_rs_get_rid_value_fn_t)(lio_resource_service_fn_t *arg, char *rid_key, char *key);
* typedef char *(*lio_rs_get_rid_config_fn_t)(lio_resource_service_fn_t *arg);
* typedef void (*lio_rs_translate_cap_set_fn_t)(lio_resource_service_fn_t *arg, char *rid_key, data_cap_set_t *cap);
* typedef void (*lio_rs_register_mapping_updates_fn_t)(lio_resource_service_fn_t *arg, lio_rs_mapping_notify_t *map_version);
* typedef void (*lio_rs_unregister_mapping_updates_fn_t)(lio_resource_service_fn_t *arg, lio_rs_mapping_notify_t *map_version);
* typedef int  (*lio_rs_query_add_fn_t)(lio_resource_service_fn_t *arg, rs_query_t **q, int op, char *key, int key_op, char *val, int val_op);
* typedef void (*lio_rs_query_append_fn_t)(lio_resource_service_fn_t *arg, rs_query_t *q, rs_query_t *qappend);
* typedef rs_query_t *(*lio_rs_query_dup_fn_t)(lio_resource_service_fn_t *arg, rs_query_t *q);
* typedef rs_query_t *(*lio_rs_query_new_fn_t)(lio_resource_service_fn_t *arg);
* typedef void (*lio_rs_query_destroy_fn_t)(lio_resource_service_fn_t *arg, rs_query_t *q);
* typedef gop_op_generic_t *(*lio_rs_data_request_fn_t)(lio_resource_service_fn_t *arg, data_attr_t *da, rs_query_t *q, data_cap_set_t **caps, lio_rs_request_t *req, int req_size, lio_rs_hints_t *hints_list, int fixed_size, int n_rid, int ignore_fixed_err, int timeout);
* typedef rs_query_t *(*lio_rs_query_parse_fn_t)(lio_resource_service_fn_t *arg, char *value);
* typedef char *(*lio_rs_query_print_fn_t)(lio_resource_service_fn_t *arg, rs_query_t *q);
* typedef void (*lio_rs_destroy_service_fn_t)(lio_resource_service_fn_t *rs);
* typedef gop_op_generic_t *(*lio_segment_read_fn_t)(lio_segment_t *seg, data_attr_t *da, lio_segment_rw_hints_t *hints, int n_iov, ex_tbx_iovec_t *iov, tbx_tbuf_t *buffer, ex_off_t boff, int timeout);
* typedef gop_op_generic_t *(*lio_segment_write_fn_t)(lio_segment_t *seg, data_attr_t *da, lio_segment_rw_hints_t *hints, int n_iov, ex_tbx_iovec_t *iov, tbx_tbuf_t *buffer, ex_off_t boff, int timeout);
* typedef gop_op_generic_t *(*lio_segment_inspect_fn_t)(lio_segment_t *seg, data_attr_t *da, tbx_log_fd_t *fd, int mode, ex_off_t buffer_size, lio_inspect_args_t *args, int timeout);
* typedef gop_op_generic_t *(*lio_lio_segment_truncate_fn_t)(lio_segment_t *seg, data_attr_t *da, ex_off_t new_size, int timeout);
* typedef gop_op_generic_t *(*lio_segment_remove_fn_t)(lio_segment_t *seg, data_attr_t *da, int timeout);
* typedef gop_op_generic_t *(*lio_segment_flush_fn_t)(lio_segment_t *seg, data_attr_t *da, ex_off_t lo, ex_off_t hi, int timeout);
* typedef gop_op_generic_t *(*lio_segment_clone_fn_t)(lio_segment_t *seg, data_attr_t *da, lio_segment_t **clone, int mode, void *attr, int timeout);
* typedef int (*lio_segment_signature_fn_t)(lio_segment_t *seg, char *buffer, int *used, int bufsize);
* typedef ex_off_t (*lio_segment_block_size_fn_t)(lio_segment_t *seg);
* typedef ex_off_t (*lio_segment_size_fn_t)(lio_segment_t *seg);
* typedef int (*lio_segment_serialize_fn_t)(lio_segment_t *seg, lio_exnode_exchange_t *exp);
* typedef int (*lio_segment_deserialize_fn_t)(lio_segment_t *seg, ex_id_t id, lio_exnode_exchange_t *exp);
* typedef void (*lio_segment_destroy_fn_t)(lio_segment_t *seg);


Other exports
-------------

* typedef */
* typedef apr_time_t tbx_ns_timeout_t;
* typedef apr_uint32_t tbx_atomic_unit32_t;
* typedef around a struct and not just a bare atomic integer to
* typedef char ibp_cap_t;
* typedef char* ibp_cap_ptr_t;
* typedef ibp_tbx_iovec_t ex_tbx_iovec_t;
* typedef int mq_pipe_t;       //** Event notification FD
* typedef int64_t ds_int_t;
* typedef int64_t ex_off_t;
* typedef int64_t ibp_off_t;  //** Base IBP offset/size data type
* typedef tbx_sl_compare_t tbx_list_compare_t;
* typedef tbx_sl_data_t tbx_list_data_t;
* typedef tbx_sl_iter_t tbx_list_iter_t;
* typedef tbx_sl_key_t tbx_list_key_t;
* typedef tbx_sl_t tbx_list_t;
* typedef tbx_stack_t mq_msg_t;
* typedef uint64_t ex_id_t;
* typedef void data_attr_t;
* typedef void data_cap_set_t;
* typedef void data_cap_t;
* typedef void data_inquire_t;
* typedef void data_probe_t;
* typedef void os_attr_iter_t;
* typedef void os_fd_t;
* typedef void os_fsck_iter_t;
* typedef void os_object_iter_t;
* typedef void rs_query_t;
* typedef void segment_priv_t;
* typedef void tbx_sl_data_t;
* typedef void tbx_sl_key_t;


